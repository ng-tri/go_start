package basic

import (
	"errors"
	"fmt"
)

func RunTest() {
	var name string
	var age int

	// üìå Scan ƒë·ªçc l·∫ßn l∆∞·ª£t c√°c gi√° tr·ªã (c√°ch nhau b·ªüi kho·∫£ng tr·∫Øng)
	fmt.Print("Enter your name and age: ")
	fmt.Scan(&name, &age)
	fmt.Println("Name:", name, "| Age:", age)

	// üìå Scanln gi·ªëng Scan, nh∆∞ng d·ª´ng khi g·∫∑p d·∫•u xu·ªëng d√≤ng
	fmt.Print("Enter your city: ")
	var city string
	fmt.Scanln(&city)
	fmt.Println("City:", city)

	// üìå Scanf ƒë·ªçc theo ƒë·ªãnh d·∫°ng c·ª• th·ªÉ
	var day int
	fmt.Print("Enter your birthday (dd): ")
	fmt.Scanf("%d\n", &day)
	fmt.Println("Birthday (day):", day)

	username := "Alice"
	score := 95.75

	// üìå Sprintf: ƒë·ªãnh d·∫°ng d·ªØ li·ªáu th√†nh chu·ªói
	s1 := fmt.Sprintf("Student: %s - Score: %.2f", username, score)
	fmt.Println(s1)

	// üìå Sprint: gi·ªëng Print nh∆∞ng tr·∫£ v·ªÅ chu·ªói
	s2 := fmt.Sprint("Hello", ",", username)
	fmt.Println(s2)

	// üìå Sprintln: t·ª± ƒë·ªông th√™m d·∫•u c√°ch gi·ªØa c√°c tham s·ªë + d·∫•u xu·ªëng d√≤ng
	s3 := fmt.Sprintln("Hi", username)
	fmt.Print(s3) // S·ª≠ d·ª•ng Print ƒë·ªÉ kh√¥ng in 2 l·∫ßn d√≤ng m·ªõi

	result, err := divide(10, 0)
	if err != nil {
		fmt.Println("Error:", err)
		return
	}
	fmt.Println("Result:", result)

	// üìå Errorf c≈©ng c√≥ th·ªÉ g·∫Øn v√†o errors.Wrap-style
	err2 := fmt.Errorf("file not found: %w", errors.New("config.json"))
	fmt.Println(err2)
}

func divide(a, b int) (int, error) {
	if b == 0 {
		return 0, fmt.Errorf("cannot divide %d by zero", a)
	}
	return a / b, nil
}

func RunBasic() {
	fmt.Println("Xin ch√†o t·ª´ Go tr√™n WSL!")

	// 1. Bi·∫øn & ki·ªÉu d·ªØ li·ªáu
	var a string = "Xin ch√†o"
	var b int = 10
	var c float64 = 3.14
	var d bool = true
	fmt.Println(a)
	fmt.Println(b)
	fmt.Println(c)
	fmt.Println(d)

	// Khai b√°o ng·∫Øn g·ªçn
	e := "Go r·∫•t tuy·ªát"
	fmt.Println(e)

	// 2. To√°n t·ª≠
	g := 10
	h := 3

	fmt.Println(g + h) // C·ªông
	fmt.Println(g - h) // Tr·ª´
	fmt.Println(g * h) // Nh√¢n
	fmt.Println(g / h) // Chia
	fmt.Println(g % h) // Chia d∆∞

	// 3. C·∫•u tr√∫c ƒëi·ªÅu ki·ªán
	x := 5

	if x > 0 {
		fmt.Println("S·ªë d∆∞∆°ng")
	} else if x == 0 {
		fmt.Println("B·∫±ng 0")
	} else {
		fmt.Println("S·ªë √¢m")
	}

	day := 3

	switch day {
	case 1:
		fmt.Println("Th·ª© Hai")
	case 2:
		fmt.Println("Th·ª© Ba")
	default:
		fmt.Println("Ng√†y kh√°c")
	}

	// 4. V√≤ng l·∫∑p
	for i := 1; i <= 5; i++ {
		fmt.Println("L·∫ßn th·ª©:", i)
	}

	i := 0
	for i < 3 {
		fmt.Println(i)
		i++
	}

	chaoTen("Linh")

	tong := cong(11, 22)
	fmt.Println(tong)

	thuong, err := chia(22, 11)
	if err != nil {
		fmt.Println("‚ùå L·ªói:", err)
		return
	}
	fmt.Println("‚úÖ K·∫øt qu·∫£ ph√©p chia:", thuong)
	array()
}

// 5. H√†m
func chaoTen(ten string) {
	fmt.Println("Xin ch√†o", ten)
}

// H√†m c√≥ return
func cong(a int, b int) int {
	return a + b
}

func chia(a, b int) (int, error) {
	if b == 0 {
		return 0, errors.New("kh√¥ng th·ªÉ chia cho 0")
	}
	return a / b, nil
}

func array() {
	// 6. M·∫£ng & Slice

	// M·∫£ng
	var arr [3]int = [3]int{1, 2, 3}
	fmt.Println(arr)

	// Slice (linh ho·∫°t h∆°n)
	numbers := []int{4, 5, 6}
	numbers = append(numbers, 7)
	fmt.Println(numbers[1]) // 5

	nums := []int{1, 2, 3, 4, 5}
	i := 2 // x√≥a ph·∫ßn t·ª≠ t·∫°i index 2 (gi√° tr·ªã 3)
	nums = append(nums[:i], nums[i+1:]...)
	fmt.Println("Sau khi x√≥a :", nums)
	// nums[:2] ch√≠nh l√† [1, 2]
	// nums[3:] l√† [4, 5]

	// H√†m append(a, b...) n·ªëi slice b v√†o cu·ªëi slice a.
	// ... l√† to√°n t·ª≠ "unpack" (m·ªü r·ªông slice b th√†nh t·ª´ng ph·∫ßn t·ª≠).
	// K·∫øt qu·∫£: append([1, 2], 4, 5) ‚áí [1, 2, 4, 5]

	//  X√≥a ph·∫ßn t·ª≠ theo gi√° tr·ªã (kh√¥ng bi·∫øt index)
	val := 3
	for i, v := range nums {
		if v == val {
			nums = append(nums[:i], nums[i+1:]...)
			fmt.Println("Sau khi x√≥a :", nums)
			break // ch·ªâ x√≥a l·∫ßn ƒë·∫ßu ti√™n
		}
	}

	// 7. Map (dictionary)
	ages := map[string]int{
		"Linh": 30,
		"Nam":  25,
	}

	fmt.Println(ages["Linh"])
	ages["An"] = 28
}

// // 8. Struct (nh∆∞ class)
// type Nguoi struct {
//     Ten  string
//     Tuoi int
// }

// func main() {
//     a := Nguoi{Ten: "Linh", Tuoi: 30}
//     fmt.Println(a.Ten)
// }

// // 9. Pointer
// func tang(x *int) {
//     *x += 1
// }

// func main() {
//     a := 10
//     tang(&a)
//     fmt.Println(a) // 11
// }
